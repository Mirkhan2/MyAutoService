@* @using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
	@await Component.InvokeAsync("LoggedInUser")

	
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul> *@
﻿@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		@await Component.InvokeAsync("LoggedInUser")

	}
	else
	{
		<li class="nav-item">
			<a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Sign In</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Open </a>
		</li>
	}
</ul>
